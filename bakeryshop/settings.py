"""
Django settings for bakeryshop project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b=u66k)1@ttq#*e$7#jv7+!&b0qy9gw0i6v7^x9q9rh(y%oi0y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'accounts'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bakeryshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bakeryshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'bsdb',
        'USER': 'sanjay',
        'PASSWORD': 'sanjay@123',
        'HOST': 'db',
        'PORT': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MY CONFIG
AUTH_USER_MODEL = 'accounts.User'

FIXER_ACCESS_KEY = 'af575e134aa2b86e0c8ed6ac94710bf6'

ADMINS = [('sanjay','sanjaychhabarwal0022@gmail.com',),]
# sets JWT expiring interval
JWT_EXPIRES = 10

REST_FRAMEWORK = {
    'NON_FIELD_ERRORS_KEY': 'error',

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
}

# set password reset lifetime, in minutes
PASSWORD_RESET_LIFETIME = 60 #1 hr

IMPORT_EXPORT_USE_TRANSACTIONS = True



# SIMPLEJWT
from datetime import timedelta
SIMPLE_JWT = {
    # shouldbe a lot shorter, like 5 mins
    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),
    # shouldbe a lot shorter, like a day
    'REFRESH_TOKEN_LIFETIME': timedelta(days=60),
    # give access and refresh token on token refresh
    'ROTATE_REFRESH_TOKENS':True,
    # add rotated refresh tokens to blacklist
    'BLACKLIST_AFTER_ROTATION':True,
    # secret
    'SIGNING_KEY': 'django-insecure-b=u66k)1@ttq#*e$7#jv7+!&b0qy9gw0i6v7^x9q9rh(y%oi0y',
    # to whom is this token intended for
    'AUDIENCE': 'None',
    # the issuer
    'ISSUER': 'None',
    # auth header prefix
    'AUTH_HEADER_TYPES': 'Bearer',
    # user id from users model
    # USER_ID_FIELD: 'id' # default

    # kay of userid field
    'USER_ID_CLAIM': 'user_id',
}

# move this to prod file
BETA_PHASE = False
